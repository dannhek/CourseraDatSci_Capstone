p <- ggplot() +
geom_line(data=df1,aes(x,y),colour="blue")
p
df1
?density
dist1  <-density(sample1$x,from=0,to=2)
dist2  <-density(sample2$x,from=0,to=2)
df1    <-data.frame(x=dist1$x,y=dist1$y)
df2    <-data.frame(x=dist2$x,y=dist2$y)
df3    <-data.frame(x=dist1$x,y=dist1$y-dist2$y)
p <- ggplot() +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_hline(yintercept=0); p
p <- ggplot() +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_line(data=df4,aes(x,y),colour="pink",linetype="dotted")   +
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2))
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_line(data=df4,aes(x,y),colour="pink",linetype="dotted")   +
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_line(data=df4,aes(x,y),colour="pink",linetype="dotted")   +
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_ribbon(aes(ymin=0,ymax=df3$y))+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_ribbon(aes(x=x ymin=0,ymax=df3$y))+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_ribbon(data=df3,aes(x=x ymin=0,ymax=y))+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_ribbon(data=df3,aes(x=x, ymin=0,ymax=y))+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_ribbon(data=df3,aes(x=x, ymin=0))+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_ribbon(data=df3,aes(x=x, ymin=0, ymax=y))+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_ribbon(data=df3,aes(x=x, ymax=y),alpha=0.5)+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_ribbon(data=df3,aes(x=x, ymax=y),ymin=0,alpha=0.5)+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_area(data=df3,aes(ymin=0,ymax=y),alpha=0.5)+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_area(data=df3,aes(x=x,ymin=0,ymax=y),alpha=0.5)+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_area(data=df3,aes(x=x,y=y),alpha=0.5)+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_area(data=df3,aes(x=x,y=y),ymin=0,alpha=0.5)+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_area(data=df3,aes(x=x,y=subset(df3,y>0)),alpha=0.5)+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_area(data=df3,aes(x=subset(df3,y>0),y=subset(df3,y>0)),alpha=0.5)+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_area(data=subset(df3,y>0),aes(x=x,y=y),alpha=0.5)+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_area(data=subset(df3,y>0),aes(x=x,y=y),alpha=0.5,color="pink")+
geom_area(data=subset(df3,y<0),aes(x=x,y=y),alpha=0.5,color="orange")+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_area(data=subset(df3,y>0),aes(x=x,y=y),alpha=0.5,colour="pink")+
geom_area(data=subset(df3,y<0),aes(x=x,y=y),alpha=0.5,colour="orange")+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),colour="blue")  +
geom_line(data=df2,aes(x,y),colour="green") +
geom_line(data=df3,aes(x,y),colour="red")   +
geom_area(data=subset(df3,y>0),aes(x=x,y=y),alpha=0.5,fill="pink")+
geom_area(data=subset(df3,y<0),aes(x=x,y=y),alpha=0.5,fill="orange")+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),size=2,colour="blue")  +
geom_line(data=df2,aes(x,y),size=2,colour="green") +
geom_line(data=df3,aes(x,y),size=2colour="red")   +
geom_area(data=subset(df3,y>0),aes(x=x,y=y),alpha=0.5,fill="pink")+
geom_area(data=subset(df3,y<0),aes(x=x,y=y),alpha=0.5,fill="orange")+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),size=2,colour="blue")  +
geom_line(data=df2,aes(x,y),size=2,colour="green") +
geom_line(data=df3,aes(x,y),size=2,colour="red")   +
geom_area(data=subset(df3,y>0),aes(x=x,y=y),alpha=0.5,fill="pink")+
geom_area(data=subset(df3,y<0),aes(x=x,y=y),alpha=0.5,fill="orange")+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),size=1.4,colour="blue")  +
geom_line(data=df2,aes(x,y),size=1.4,colour="green") +
geom_line(data=df3,aes(x,y),size=1.4,colour="red")   +
geom_area(data=subset(df3,y>0),aes(x=x,y=y),alpha=0.5,fill="pink")+
geom_area(data=subset(df3,y<0),aes(x=x,y=y),alpha=0.5,fill="orange")+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
geom_line(data=df1,aes(x,y),size=1.4,colour="blue")  +
geom_line(data=df2,aes(x,y),size=1.4,colour="green") +
geom_line(data=df3,aes(x,y),size=1.4,colour="red")   +
geom_area(data=subset(df3,y>0),aes(x=x,y=y),alpha=0.7,fill="pink")+
geom_area(data=subset(df3,y<0),aes(x=x,y=y),alpha=0.7,fill="orange")+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
#geom_line(data=df1,aes(x,y),size=1.4,colour="blue")  +
#geom_line(data=df2,aes(x,y),size=1.4,colour="green") +
geom_line(data=df3,aes(x,y),size=1.4,colour="red")   +
geom_area(data=subset(df3,y>0),aes(x=x,y=y),alpha=0.7,fill="pink")+
geom_area(data=subset(df3,y<0),aes(x=x,y=y),alpha=0.7,fill="orange")+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
#geom_line(data=df1,aes(x,y),size=1.4,colour="blue")  +
#geom_line(data=df2,aes(x,y),size=1.4,colour="green") +
geom_line(data=df3,aes(x,y),size=1.4,colour="black")   +
geom_area(data=subset(df3,y>0),aes(x=x,y=y),alpha=0.7,fill="green")+
geom_area(data=subset(df3,y<0),aes(x=x,y=y),alpha=0.7,fill="red")+
geom_hline(yintercept=0); p
p <- ggplot() +
scale_x_continuous(limits=c(0,2)) +
#geom_line(data=df1,aes(x,y),size=1.4,colour="blue")  +
#geom_line(data=df2,aes(x,y),size=1.4,colour="green") +
geom_line(data=df3,aes(x,y),size=1.4,colour="black")   +
geom_area(data=subset(df3,y>0),aes(x=x,y=y),alpha=0.5,fill="green")+
geom_area(data=subset(df3,y<0),aes(x=x,y=y),alpha=0.5,fill="red")+
geom_hline(yintercept=0); p
library(shiny)
library(ggplot2)
library(maps)
library(plyr)
data(state)
state<-as.data.frame(cbind( state.abb,
state.area,
state.center,
state.division,
state.name,
state.region,
state.x77))
names(state)<-c("abbreviation","area","center","division","state","region",
"population","income","illiteracy","life_expectancy","murder",
"hs_grad_rate","frost","area")
state$abbreviation <- as.factor(as.character(state$abbreviation))
state$division     <- as.factor(as.character(state$division))
state$region       <- as.factor(as.character(state$region))
state$perCapita    <- as.numeric(state$income)/as.numeric(state$population)
state$state        <- as.character(state$state)
map_data <- map_data("state")
map_data$region    <- gsub("\\b([a-z])([a-z]+)", "\\U\\1\\L\\2" ,map_data$region,perl=TRUE)
states <- merge(state,map_data,by.x="state",by.y="region",all.y=TRUE)
g <- ggplot(states) + geom_polygon(aes(x=long, y=lat, group=group),colour="white") ; g
g <- ggplot(states) + geom_polygon(aes(x=long, y=lat, group=group),colour="white",fill=population) ; g
g <- ggplot(data=states) + geom_polygon(aes(x=long, y=lat, group=group),colour="white",fill=population) ; g
View(states)
class(map_data$region)
levels(as.factor(map_data$region))
?equal
??equal
?all.equal
all.equal(levels(as.factor(map_data$region)),levels(as.factor(state$state)))
levels(as.factor(state$state))
states <- merge(state,map_data,by.x="state",by.y="region")
g <- ggplot(data=states) + geom_polygon(aes(x=long, y=lat, group=group),colour="white",fill=population) ; g
g <- ggplot(data=states) + geom_polygon(aes(x=long, y=lat, group=group),colour="white") ; g
shiny::runApp('Coursera/Data Products')
shiny::runApp('Coursera/Data Products')
shiny::runApp('Coursera/Data Products')
library(lubridate)  # For year() function below
library(forecast)
url  <- "https://d396qusza40orc.cloudfront.net/predmachlearn/gaData.csv"
dest <- "gaData.csv"
download.file(url,dest)
dat = read.csv(dest)
training = dat[year(dat$date) < 2012,]
testing = dat[(year(dat$date)) > 2011,]
tstrain = ts(training$visitsTumblr)
tstest = ts(testing$visitsTumblr)
modl1<-bats(tstrain) ; summary(modl1)
fcast<-forecast(modl1)
plot(fcast)
lines(tstest,col="red")
modl1
lines(modl1)
plot(tstrain)
plot(tstest)
fcast
head(tstest)
head(testing)
?forecast
fcast<-forecast(modl1,h=length(testing))
plot(fcast)
plot(fcast)
lines(tstest,col="red")
url  <- "https://d396qusza40orc.cloudfront.net/predmachlearn/gaData.csv"
dest <- "gaData.csv"
download.file(url,dest)
dat = read.csv(dest)
training = dat[year(dat$date) < 2012,]
testing = dat[(year(dat$date)) > 2011,]
tstrain = ts(training$visitsTumblr)
tstest = ts(testing$visitsTumblr)
modl1<-bats(tstrain) ; summary(modl1)
fcast<-forecast(modl1,h=length(testing))
plot(fcast)
lines(tstest,col="red")
fcast
fcast<-forecast(modl1,h=length(tstest))
plot(fcast)
lines(tstest,col="red")
fcast
fcast<-forecast(modl1,h=length(tstest),level=.95)
fcast
head(fcast)
plot(fcast)
str(fcast)
subset(fcast,TRUE,c("x,mean,upper,lower"))
head(data.frame(fcast$x,fcast$mean,fcast$lower,fcast$upper))
fcast<-forecast(modl1,h=length(tstest),level=95)
plot(fcast)
plot(NULL)
plot(fcast)
plot(tstest)
plot(fcast)
accuracy(fcast,tstest)
?lines
accuracy(fcast,tstest)
?ts
tstest = ts(testing$visitsTumblr,start=length(tstrain)+1)
lines(tstest,col="red")
accuracy(fcast,tstest)
class(fclass)
class(fcast)
fcast$upper
cbind(tstest,fcast$upper)
sum((tstest>fcast$upper))
591/600
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
set.seed(233)
modl1 <- train(CompressiveStrength~.,data=training,method="lasso")
modl1$finalModel
library(AppliedPredictiveModeling); library(caret)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
set.seed(233)
modl1 <- train(CompressiveStrength~.,data=training,method="lasso")
modl1$finalModel
library(ElemStatLearn) ; library(caret)
data(vowel.train) ; vowel.train$y <- as.factor(as.character(vowel.train$y))
data(vowel.test)  ; vowel.test$y  <- as.factor(as.character(vowel.test$y))
set.seed(33833)
modl1 <- train(y~.,data=vowel.train,method="rf")
modl2 <- train(y~.,data=vowel.train,method="gbm")
agreement <- function(set1,set2) {sum((set1==set2))/length(set1)}
pred1 <- predict(modl1,newdata=vowel.test)
pred2 <- predict(modl2,newdata=vowel.test)
df <- data.frame(
a <- agreement(pred1,vowel.test$y),
b <- agreement(pred2,vowel.test$y),
c <- agreement(pred1,pred2)
) ; names(df) <- c("a","b","c") ; df
set.seed(3523)
library(AppliedPredictiveModeling) ; library(e1071) ; library(caret)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
modl1 <- svm(CompressiveStrength~.,data=training)
RMSE(predict(modl1,newdata=testing),testing$CompressiveStrength)
q()
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone/shiny test')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone/shiny test')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone/shiny test')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone/shiny test')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone/shiny test')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone/shiny test')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone/shiny test')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone')
shiny::runApp('Coursera/Data Science Specialization/Data Science Capstone')
library(shiny)
setwd("~/Coursera/Data Science Specialization/Data Science Capstone")
shiny::runApp()
shiny::runApp('shiny test/2')
shiny::runApp('shiny test/2')
shiny::runApp('shiny test/2')
shiny::runApp('shiny test/2')
shiny::runApp('shiny test/2')
shiny::runApp('shiny test/2')
shiny::runApp('shiny test/2')
shiny::runApp('shiny test/2')
shiny::runApp('shiny test/2')
shiny::runApp('shiny test/2')
shiny::runApp('shiny test/2')
shiny::runApp('shiny test/2')
shiny::runApp()
source("~/Coursera/Data Science Specialization/Data Science Capstone/core functions.R")
dfm2 <- readRDS("~/Coursera/Data Science Specialization/Data Science Capstone/dfm2_20160324.RDS")
dfm3 <- readRDS("~/Coursera/Data Science Specialization/Data Science Capstone/dfm3_20160324.RDS")
dfm4 <- readRDS("~/Coursera/Data Science Specialization/Data Science Capstone/dfm4_20160324.RDS")
shiny::runApp()
shiny::runApp('shiny test/2')
shiny::runApp()
shiny::runApp()
shiny::runApp('shiny test/2')
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp('shiny test/2')
shiny::runApp('shiny test/2')
shiny::runApp('shiny test/2')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?verbatimTextOutput
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('shiny test')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('shiny test')
shiny::runApp('shiny test')
shiny::runApp('shiny test')
shiny::runApp('shiny test')
shiny::runApp('shiny test')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
source("core functions.R")
getwd()
shiny::runApp('data product')
list.files
list.files()
setwd("./data product")
shiny::runApp()
list.files()
shiny::runApp()
shiny::runApp()
